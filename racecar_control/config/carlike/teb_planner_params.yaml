TebLocalPlannerROS:

 # Odometry information that gives the local planner the current speed of the robot.
 odom_topic: /odom

 # Global planning frame . Default value is "odom".
 # (in case of a static map, this parameter must be usually changed to "/map".
 map_topic: /map

 ########## Trajectory ##########
  
 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 allow_init_with_backwards_motion: True
 max_global_plan_lookahead_dist: 3.0
 feasibility_check_no_poses: 4
    
 ########## Robot ##########
         
 max_vel_x: 1.0
 max_vel_x_backwards: 0.7
 max_vel_y: 0.0
 max_vel_theta: 2.5 # the angular velocity is also bounded by min_turning_radius in case of a carlike robot (r = v / omega)
 acc_lim_x: 1.0
 acc_lim_theta: 4.0

 # ********************** Carlike robot parameters ********************
 min_turning_radius: 0.9        # Min turning radius of the carlike robot (compute value using a model or adjust with rqt_reconfigure manually)
 wheelbase: 0.34                 # Wheelbase of our robot
 cmd_angle_instead_rotvel: False # stage simulator takes the angle instead of the rotvel as input (twist message)
 # ********************************************************************

 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "polygon"
   vertices: [ [-0.28,-0.15], [0.28,-0.15], [0.28,0.15], [-0.28, 0.15] ]

 ########## GoalTolerance ##########
    
 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.1

 # Remove the goal velocity constraint such that the robot can arrive at the goal with maximum speed
 free_goal_vel: False
    
 ########## Obstacles ##########
    
 min_obstacle_dist: 0.15 # This value must also include our robot's expansion, since footprint_model is set to "line".
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0

 # Buffer zone around obstacles with non-zero penalty costs (should be larger than
 # min_obstacle_dist in order to take effect). Default is 0.6.
 inflation_dist: 0.10
 obstacle_poses_affected: 30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 ########## Optimization ##########
    
 no_inner_iterations: 4
 no_outer_iterations: 3
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 10.0
 weight_max_vel_theta: 10.0
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 10
 weight_kinematics_turning_radius: 50
 weight_optimaltime: 1
 weight_obstacle: 50

 ########## Homotopy Class Planner ##########

 enable_homotopy_class_planning: False
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 2

 # Specify how much trajectory cost must a new candidate have w.r.t. a previously selected trajectory in order to be
 # selected (selection if new_cost < old_cost*factor)
 selection_cost_hysteresis: 0.8

 # Default is 100
 selection_obst_cost_scale: 1.0

 # If true, time cost (sum of squared time differences) is replaced by the total transition time (sum of time differences).
 selection_alternative_time_cost: False
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False

